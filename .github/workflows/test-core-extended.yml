name: Extended tests for MMTk core

on:
  workflow_dispatch:
    inputs:
      mmtk-core-repo:
        required: false
        type: string
      mmtk-core-ref:
        required: false
        type: string
  # Trigger the test once
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Normal build
  build-normal-fastdebug:
    uses: ./.github/workflows/build.yml
    with:
      debug-level: fastdebug
      # mmtk-core-repo: ${{ inputs.mmtk-core-repo }}
      # mmtk-core-ref: ${{ inputs.mmtk-core-ref }}
      mmtk-core-repo: qinsoon/mmtk-core
      mmtk-core-ref: 4156c28e90235c51de9740001f62b12d423a0fcc

  # Feature build
  build-vo-bit:
    uses: ./.github/workflows/build.yml
    with:
      build-env-var: VO_BIT=1
      debug-level: fastdebug

  build-extreme-assertions:
    uses: ./.github/workflows/build.yml
    with:
      build-env-var: MMTK_EXTREME_ASSERTIONS=1
      debug-level: fastdebug

  build-malloc-mark-sweep:
    uses: ./.github/workflows/build.yml
    with:
      # Test malloc mark sweep with extreme assertions
      build-env-var: MMTK_MALLOC_MARK_SWEEP=1 MMTK_EXTREME_ASSERTIONS=1
      debug-level: fastdebug

  build-mark-in-header:
    uses: ./.github/workflows/build.yml
    with:
      # Only test with malloc mark sweep. We should get other plans work with mark in header.
      build-env-var: MMTK_MALLOC_MARK_SWEEP=1 MARK_IN_HEADER=1
      debug-level: fastdebug

  run-dacapo-2006:
    needs:
      - build-normal-fastdebug
      - build-vo-bit
      - build-extreme-assertions
      - build-malloc-mark-sweep
      - build-mark-in-header
    uses: ./.github/workflows/run-dacapo-2006.yml
